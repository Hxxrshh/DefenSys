apiVersion: apps/v1
kind: Deployment
metadata:
  name: defensys-api
  namespace: defensys-prod
  labels:
    app: defensys-api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: defensys-api
  template:
    metadata:
      labels:
        app: defensys-api
        version: v1
    spec:
      containers:
      - name: defensys-api
        image: your-registry.com/defensys-api:latest
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: defensys-secrets
              key: database-url
        - name: BROKER_URL
          valueFrom:
            secretKeyRef:
              name: defensys-secrets
              key: broker-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: defensys-secrets
              key: redis-url
        - name: FLASK_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      imagePullSecrets:
      - name: registry-secret
---
apiVersion: v1
kind: Service
metadata:
  name: defensys-api-service
  namespace: defensys-prod
  labels:
    app: defensys-api
spec:
  selector:
    app: defensys-api
  ports:
  - name: http
    port: 80
    targetPort: 5000
    protocol: TCP
  type: ClusterIP

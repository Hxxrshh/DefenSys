# src/core/alerts.py

import json
from datetime import datetime

class AlertManager:
    """
    Manages alerts generated by vulnerability scans.
    Provides structured output in JSON and HTML formats.
    """

    def __init__(self):
        self.alerts = []

    def add_alert(self, vulnerability, severity, evidence, remediation):
        alert = {
            "timestamp": datetime.utcnow().isoformat() + "Z",
            "vulnerability": vulnerability,
            "severity": severity,
            "evidence": evidence,
            "remediation": remediation
        }
        self.alerts.append(alert)

    def get_alerts(self):
        return self.alerts

    def to_json(self):
        return json.dumps(self.alerts, indent=4)

    def to_html(self):
        html = [
            "<html><head><title>Defensys Report</title></head><body>",
            "<h1>Defensys Scan Report</h1>",
            "<table border='1' cellpadding='5' cellspacing='0'>",
            "<tr><th>Timestamp</th><th>Vulnerability</th><th>Severity</th><th>Evidence</th><th>Remediation</th></tr>"
        ]

        for alert in self.alerts:
            html.append(
                f"<tr>"
                f"<td>{alert['timestamp']}</td>"
                f"<td>{alert['vulnerability']}</td>"
                f"<td>{alert['severity']}</td>"
                f"<td>{alert['evidence']}</td>"
                f"<td>{alert['remediation']}</td>"
                f"</tr>"
            )

        html.append("</table></body></html>")
        return "\n".join(html)


# Example usage
if __name__ == "__main__":
    alerts = AlertManager()
    alerts.add_alert(
        "SQL Injection",
        "High",
        "Payload ' OR '1'='1 triggered error",
        "Use parameterized queries"
    )
    print("[JSON Format]\n", alerts.to_json())
    print("\n[HTML Format]\n", alerts.to_html())
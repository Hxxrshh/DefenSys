{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hys20\\\\Desktop\\\\Civic Track\\\\DefenSys\\\\defensys\\\\frontend\\\\src\\\\components\\\\ScanForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { targetAPI, scanAPI, scannerAPI } from '../services/api';\nimport './ScanForm.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ScanForm({\n  onSuccess,\n  onCancel,\n  preselectedTarget = null\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    targetValue: '',\n    targetType: 'ip',\n    scanType: 'default',\n    scanTools: []\n  });\n  const [targets, setTargets] = useState([]);\n  const [availableScanners, setAvailableScanners] = useState([]);\n  const [useExistingTarget, setUseExistingTarget] = useState(false);\n  const [selectedTargetId, setSelectedTargetId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => {\n    if (preselectedTarget) {\n      setUseExistingTarget(true);\n      setSelectedTargetId(preselectedTarget.id);\n      setFormData({\n        ...formData,\n        targetValue: preselectedTarget.value,\n        targetType: preselectedTarget.target_type\n      });\n    }\n  }, [preselectedTarget]);\n  const loadData = async () => {\n    try {\n      const [targetsData, scannersData] = await Promise.all([targetAPI.getAll(), scannerAPI.getAvailable()]);\n      setTargets(targetsData);\n      setAvailableScanners(scannersData.scanners || []);\n    } catch (err) {\n      console.error('Failed to load data:', err);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleScannerToggle = scannerName => {\n    const updatedTools = formData.scanTools.includes(scannerName) ? formData.scanTools.filter(t => t !== scannerName) : [...formData.scanTools, scannerName];\n    setFormData({\n      ...formData,\n      scanTools: updatedTools\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      // Prepare scan configuration\n      const scanConfig = {\n        target_value: formData.targetValue,\n        target_type: formData.targetType,\n        scan_type: formData.scanType\n      };\n\n      // Add scan tools if selected\n      if (formData.scanTools.length > 0) {\n        scanConfig.scan_tools = formData.scanTools;\n      }\n\n      // Start the scan\n      const result = await scanAPI.start(scanConfig);\n      if (onSuccess) {\n        onSuccess(result);\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Failed to start scan. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getRecommendedScanners = () => {\n    const {\n      targetType,\n      scanType\n    } = formData;\n\n    // Recommend scanners based on target type and scan type\n    const recommendations = {\n      ip: ['nmap', 'nuclei'],\n      domain: ['nmap', 'nuclei', 'nikto'],\n      url: ['zap', 'nuclei', 'nikto'],\n      cidr: ['nmap']\n    };\n    return recommendations[targetType] || [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"scan-form\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Target Source\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group w-100\",\n        role: \"group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: \"btn-check\",\n          name: \"targetSource\",\n          id: \"newTarget\",\n          checked: !useExistingTarget,\n          onChange: () => setUseExistingTarget(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"btn btn-outline-primary\",\n          htmlFor: \"newTarget\",\n          children: \"New Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          className: \"btn-check\",\n          name: \"targetSource\",\n          id: \"existingTarget\",\n          checked: useExistingTarget,\n          onChange: () => setUseExistingTarget(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"btn btn-outline-primary\",\n          htmlFor: \"existingTarget\",\n          children: \"Existing Target\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), useExistingTarget ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"targetSelect\",\n        className: \"form-label\",\n        children: \"Select Target\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"targetSelect\",\n        className: \"form-select\",\n        value: selectedTargetId || '',\n        onChange: e => {\n          const targetId = parseInt(e.target.value);\n          setSelectedTargetId(targetId);\n          const target = targets.find(t => t.id === targetId);\n          if (target) {\n            setFormData({\n              ...formData,\n              targetValue: target.value,\n              targetType: target.target_type\n            });\n          }\n        },\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose a target...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), targets.map(target => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: target.id,\n          children: [target.name, \" - \", target.value, \" (\", target.target_type, \")\"]\n        }, target.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"targetValue\",\n          className: \"form-label\",\n          children: \"Target Value *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"targetValue\",\n          name: \"targetValue\",\n          value: formData.targetValue,\n          onChange: handleInputChange,\n          placeholder: \"e.g., 192.168.1.1, example.com, https://example.com\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-text\",\n          children: \"Enter IP address, domain name, URL, or CIDR notation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"targetType\",\n          className: \"form-label\",\n          children: \"Target Type *\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"targetType\",\n          className: \"form-select\",\n          name: \"targetType\",\n          value: formData.targetType,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ip\",\n            children: \"IP Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"domain\",\n            children: \"Domain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"url\",\n            children: \"URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cidr\",\n            children: \"CIDR Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"scanType\",\n        className: \"form-label\",\n        children: \"Scan Type *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"scanType\",\n        className: \"form-select\",\n        name: \"scanType\",\n        value: formData.scanType,\n        onChange: handleInputChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"quick\",\n          children: \"Quick Scan (Fast, common ports)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default Scan (Balanced)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"full\",\n          children: \"Full Scan (Comprehensive, slow)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"network\",\n          children: \"Network Scan (Infrastructure focus)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"web\",\n          children: \"Web Scan (Application focus)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-text\",\n        children: [formData.scanType === 'quick' && 'Scans top 100 ports, quick vulnerability checks', formData.scanType === 'default' && 'Scans top 1000 ports, standard security checks', formData.scanType === 'full' && 'Scans all 65535 ports, deep vulnerability analysis', formData.scanType === 'network' && 'Focus on network enumeration and infrastructure', formData.scanType === 'web' && 'Focus on web application vulnerabilities']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: [\"Select Scanners\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted ms-2\",\n          children: \"(Optional - auto-selected if none chosen)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-grid\",\n        children: availableScanners.map(scanner => {\n          const isRecommended = getRecommendedScanners().includes(scanner.name.toLowerCase());\n          const isSelected = formData.scanTools.includes(scanner.name);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scanner-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"btn-check\",\n              id: `scanner-${scanner.name}`,\n              checked: isSelected,\n              onChange: () => handleScannerToggle(scanner.name),\n              disabled: !scanner.available\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: `btn btn-outline-secondary w-100 ${isRecommended ? 'recommended' : ''}`,\n              htmlFor: `scanner-${scanner.name}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: scanner.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 23\n                  }, this), isRecommended && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"badge bg-primary ms-2\",\n                    children: \"Recommended\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this), !scanner.available && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"badge bg-danger\",\n                  children: \"Unavailable\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted d-block mt-1\",\n                children: scanner.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, scanner.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-end gap-2\",\n      children: [onCancel && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: onCancel,\n        disabled: loading,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner-border spinner-border-sm me-2\",\n            role: \"status\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), \"Starting Scan...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bi bi-play-circle me-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), \"Start Scan\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(ScanForm, \"h+XKIdIdGznaAPqbD8de7BON7Gk=\");\n_c = ScanForm;\nexport default ScanForm;\nvar _c;\n$RefreshReg$(_c, \"ScanForm\");","map":{"version":3,"names":["React","useState","useEffect","targetAPI","scanAPI","scannerAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","ScanForm","onSuccess","onCancel","preselectedTarget","_s","formData","setFormData","targetValue","targetType","scanType","scanTools","targets","setTargets","availableScanners","setAvailableScanners","useExistingTarget","setUseExistingTarget","selectedTargetId","setSelectedTargetId","loading","setLoading","error","setError","loadData","id","value","target_type","targetsData","scannersData","Promise","all","getAll","getAvailable","scanners","err","console","handleInputChange","e","name","target","handleScannerToggle","scannerName","updatedTools","includes","filter","t","handleSubmit","preventDefault","scanConfig","target_value","scan_type","length","scan_tools","result","start","_err$response","_err$response$data","response","data","detail","getRecommendedScanners","recommendations","ip","domain","url","cidr","onSubmit","className","children","role","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","htmlFor","targetId","parseInt","find","required","map","placeholder","scanner","isRecommended","toLowerCase","isSelected","disabled","available","description","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hys20/Desktop/Civic Track/DefenSys/defensys/frontend/src/components/ScanForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { targetAPI, scanAPI, scannerAPI } from '../services/api';\r\nimport './ScanForm.css';\r\n\r\nfunction ScanForm({ onSuccess, onCancel, preselectedTarget = null }) {\r\n  const [formData, setFormData] = useState({\r\n    targetValue: '',\r\n    targetType: 'ip',\r\n    scanType: 'default',\r\n    scanTools: [],\r\n  });\r\n  const [targets, setTargets] = useState([]);\r\n  const [availableScanners, setAvailableScanners] = useState([]);\r\n  const [useExistingTarget, setUseExistingTarget] = useState(false);\r\n  const [selectedTargetId, setSelectedTargetId] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (preselectedTarget) {\r\n      setUseExistingTarget(true);\r\n      setSelectedTargetId(preselectedTarget.id);\r\n      setFormData({\r\n        ...formData,\r\n        targetValue: preselectedTarget.value,\r\n        targetType: preselectedTarget.target_type,\r\n      });\r\n    }\r\n  }, [preselectedTarget]);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const [targetsData, scannersData] = await Promise.all([\r\n        targetAPI.getAll(),\r\n        scannerAPI.getAvailable(),\r\n      ]);\r\n      setTargets(targetsData);\r\n      setAvailableScanners(scannersData.scanners || []);\r\n    } catch (err) {\r\n      console.error('Failed to load data:', err);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleScannerToggle = (scannerName) => {\r\n    const updatedTools = formData.scanTools.includes(scannerName)\r\n      ? formData.scanTools.filter(t => t !== scannerName)\r\n      : [...formData.scanTools, scannerName];\r\n    \r\n    setFormData({\r\n      ...formData,\r\n      scanTools: updatedTools,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Prepare scan configuration\r\n      const scanConfig = {\r\n        target_value: formData.targetValue,\r\n        target_type: formData.targetType,\r\n        scan_type: formData.scanType,\r\n      };\r\n\r\n      // Add scan tools if selected\r\n      if (formData.scanTools.length > 0) {\r\n        scanConfig.scan_tools = formData.scanTools;\r\n      }\r\n\r\n      // Start the scan\r\n      const result = await scanAPI.start(scanConfig);\r\n      \r\n      if (onSuccess) {\r\n        onSuccess(result);\r\n      }\r\n    } catch (err) {\r\n      setError(err.response?.data?.detail || 'Failed to start scan. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getRecommendedScanners = () => {\r\n    const { targetType, scanType } = formData;\r\n    \r\n    // Recommend scanners based on target type and scan type\r\n    const recommendations = {\r\n      ip: ['nmap', 'nuclei'],\r\n      domain: ['nmap', 'nuclei', 'nikto'],\r\n      url: ['zap', 'nuclei', 'nikto'],\r\n      cidr: ['nmap'],\r\n    };\r\n\r\n    return recommendations[targetType] || [];\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"scan-form\">\r\n      {error && (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      )}\r\n\r\n      {/* Target Selection */}\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">Target Source</label>\r\n        <div className=\"btn-group w-100\" role=\"group\">\r\n          <input\r\n            type=\"radio\"\r\n            className=\"btn-check\"\r\n            name=\"targetSource\"\r\n            id=\"newTarget\"\r\n            checked={!useExistingTarget}\r\n            onChange={() => setUseExistingTarget(false)}\r\n          />\r\n          <label className=\"btn btn-outline-primary\" htmlFor=\"newTarget\">\r\n            New Target\r\n          </label>\r\n\r\n          <input\r\n            type=\"radio\"\r\n            className=\"btn-check\"\r\n            name=\"targetSource\"\r\n            id=\"existingTarget\"\r\n            checked={useExistingTarget}\r\n            onChange={() => setUseExistingTarget(true)}\r\n          />\r\n          <label className=\"btn btn-outline-primary\" htmlFor=\"existingTarget\">\r\n            Existing Target\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      {useExistingTarget ? (\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"targetSelect\" className=\"form-label\">Select Target</label>\r\n          <select\r\n            id=\"targetSelect\"\r\n            className=\"form-select\"\r\n            value={selectedTargetId || ''}\r\n            onChange={(e) => {\r\n              const targetId = parseInt(e.target.value);\r\n              setSelectedTargetId(targetId);\r\n              const target = targets.find(t => t.id === targetId);\r\n              if (target) {\r\n                setFormData({\r\n                  ...formData,\r\n                  targetValue: target.value,\r\n                  targetType: target.target_type,\r\n                });\r\n              }\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\">Choose a target...</option>\r\n            {targets.map((target) => (\r\n              <option key={target.id} value={target.id}>\r\n                {target.name} - {target.value} ({target.target_type})\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"targetValue\" className=\"form-label\">Target Value *</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"targetValue\"\r\n              name=\"targetValue\"\r\n              value={formData.targetValue}\r\n              onChange={handleInputChange}\r\n              placeholder=\"e.g., 192.168.1.1, example.com, https://example.com\"\r\n              required\r\n            />\r\n            <div className=\"form-text\">\r\n              Enter IP address, domain name, URL, or CIDR notation\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"targetType\" className=\"form-label\">Target Type *</label>\r\n            <select\r\n              id=\"targetType\"\r\n              className=\"form-select\"\r\n              name=\"targetType\"\r\n              value={formData.targetType}\r\n              onChange={handleInputChange}\r\n              required\r\n            >\r\n              <option value=\"ip\">IP Address</option>\r\n              <option value=\"domain\">Domain</option>\r\n              <option value=\"url\">URL</option>\r\n              <option value=\"cidr\">CIDR Network</option>\r\n            </select>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Scan Type */}\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"scanType\" className=\"form-label\">Scan Type *</label>\r\n        <select\r\n          id=\"scanType\"\r\n          className=\"form-select\"\r\n          name=\"scanType\"\r\n          value={formData.scanType}\r\n          onChange={handleInputChange}\r\n          required\r\n        >\r\n          <option value=\"quick\">Quick Scan (Fast, common ports)</option>\r\n          <option value=\"default\">Default Scan (Balanced)</option>\r\n          <option value=\"full\">Full Scan (Comprehensive, slow)</option>\r\n          <option value=\"network\">Network Scan (Infrastructure focus)</option>\r\n          <option value=\"web\">Web Scan (Application focus)</option>\r\n        </select>\r\n        <div className=\"form-text\">\r\n          {formData.scanType === 'quick' && 'Scans top 100 ports, quick vulnerability checks'}\r\n          {formData.scanType === 'default' && 'Scans top 1000 ports, standard security checks'}\r\n          {formData.scanType === 'full' && 'Scans all 65535 ports, deep vulnerability analysis'}\r\n          {formData.scanType === 'network' && 'Focus on network enumeration and infrastructure'}\r\n          {formData.scanType === 'web' && 'Focus on web application vulnerabilities'}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Scanner Selection */}\r\n      <div className=\"mb-3\">\r\n        <label className=\"form-label\">\r\n          Select Scanners \r\n          <span className=\"text-muted ms-2\">(Optional - auto-selected if none chosen)</span>\r\n        </label>\r\n        <div className=\"scanner-grid\">\r\n          {availableScanners.map((scanner) => {\r\n            const isRecommended = getRecommendedScanners().includes(scanner.name.toLowerCase());\r\n            const isSelected = formData.scanTools.includes(scanner.name);\r\n            \r\n            return (\r\n              <div key={scanner.name} className=\"scanner-card\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"btn-check\"\r\n                  id={`scanner-${scanner.name}`}\r\n                  checked={isSelected}\r\n                  onChange={() => handleScannerToggle(scanner.name)}\r\n                  disabled={!scanner.available}\r\n                />\r\n                <label\r\n                  className={`btn btn-outline-secondary w-100 ${isRecommended ? 'recommended' : ''}`}\r\n                  htmlFor={`scanner-${scanner.name}`}\r\n                >\r\n                  <div className=\"d-flex align-items-center justify-content-between\">\r\n                    <div>\r\n                      <strong>{scanner.name}</strong>\r\n                      {isRecommended && (\r\n                        <span className=\"badge bg-primary ms-2\">Recommended</span>\r\n                      )}\r\n                    </div>\r\n                    {!scanner.available && (\r\n                      <span className=\"badge bg-danger\">Unavailable</span>\r\n                    )}\r\n                  </div>\r\n                  <small className=\"text-muted d-block mt-1\">{scanner.description}</small>\r\n                </label>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"d-flex justify-content-end gap-2\">\r\n        {onCancel && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={onCancel}\r\n            disabled={loading}\r\n          >\r\n            Cancel\r\n          </button>\r\n        )}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n              Starting Scan...\r\n            </>\r\n          ) : (\r\n            <>\r\n              <i className=\"bi bi-play-circle me-2\"></i>\r\n              Start Scan\r\n            </>\r\n          )}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ScanForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}